#!/bin/bash
#
source $HOME/.IPS

if [ -z "${1}" ] ; then
    echo
    echo -e "${BRed}       x|x ${NC}"
    echo -e "${BRed}        o "
    echo -e "${BRed}       +++ "
    echo -e "${Red}        * "
    echo -e "${ALERT} - $cmdenv targets - ${NC}"
    killitplease="$(etcdctl ls --sort $runenv 2> /dev/null)" || { killitplease="X" ; }
    if [ "$killitplease" == "X" ] ; then
        echo -en "${BWhite} Nothing to destroy here ${NC}"
        echo
        exit 1
    else
        echo -en "$(echo $killitplease | cut -d '/' -f 5)"
        echo -e "${NC}"
        echo
        exit
    fi
fi

killtarget="${1}"
ipsenv="$cfgenv/$killtarget"
InstanceId=$(etcdctl get $runenv/${1}/InstanceId 2> /dev/null) || { echo ; echo -e "${ALERT}    - No running instance called $killtarget -  ${NC} " ; echo ; exit 1 ; }
region="$(etcdctl get $ipsenv/region)"
sizeing="$(etcdctl get $ipsenv/size)"
size=$(etcdctl get size/mg/${sizeing})
points=$(etcdctl get points/${size})
curscore=$(etcdctl get score)
newscore=$(echo "$curscore - $points" | bc)
etcdctl set score "$newscore" &>/dev/null

echo "Killing $InstanceId in $region "
aws ec2 create-tags --region $region --tags Key=Name,Value=DEAD --resources $InstanceId
deathstat=$(aws ec2 terminate-instances --region $region --instance-ids $InstanceId)
echo " $cmdenv $deathstat"
sleep 15
getdef=$(aws ec2 describe-instances --region $region --instance-id $InstanceId | jq '.Reservations[].Instances[]')
declare -A myarray
    while IFS="=" read -r key value ; do
        myarray[$key]="$value"
    done < <(echo "${getdef[@]}" | jq -cr 'to_entries | map("\(.key)=\(.value)") | flatten[]')
    for key in "${!myarray[@]}" ; do
        etcdctl set --ttl 180 $runenv/${1}/$key "${myarray[$key]}"
    done
    sleep 8
        etcdctl updatedir --ttl 185 $cfgenv/${killtarget}
        etcdctl updatedir --ttl 180 $runenv/$1
dns_rm ${killtarget} 
msgbus "$killtarget gone at that the hands of $BUDDY " 
sleep 10
msgbus " Instance destruction completed by $cmdenv" 
sleep 20
oldsec=$(etcdctl get $cfgenv/${1}/secgroup) 
secgroup=$(aws ec2 delete-security-group --region $region --group-id ${oldsec} 2>/tmp/exit.${ipscmd}) || { msgbus "  $ipscmd $BUDDY $(cat /tmp/exit.${ipscmd} | tr -d '\n') ${NC} " ; }
etcdctl rm $cfgenv/${1}/secgroup 


